/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CollateralAdapter,
  CollateralAdapterInterface,
} from "../../../contracts/adapter.sol/CollateralAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "NotLive",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CollateralExited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CollateralJoined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralContract",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralType",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_vaultId",
        type: "uint256",
      },
    ],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_collateralType",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_collateralContract",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_vaultId",
        type: "uint256",
      },
    ],
    name: "join",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "live",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultContract",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b506122148061001d5f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c8063957aa58c1161008a578063c6e1c7c911610064578063c6e1c7c914610246578063d26b3e6e14610264578063d547741f14610280578063e824600f1461029c576100e8565b8063957aa58c146101ee578063a217fddf1461020c578063ad8949821461022a576100e8565b80632f2ff15d116100c65780632f2ff15d1461016a57806336568abe146101865780637613c1d2146101a257806391d14854146101be576100e8565b806301ffc9a7146100ec5780632274346b1461011c578063248a9ca31461013a575b5f80fd5b61010660048036038101906101019190611692565b6102ba565b60405161011391906116d7565b60405180910390f35b610124610333565b604051610131919061176a565b60405180910390f35b610154600480360381019061014f91906117b6565b610358565b60405161016191906117f0565b60405180910390f35b610184600480360381019061017f9190611844565b610375565b005b6101a0600480360381019061019b9190611844565b610396565b005b6101bc60048036038101906101b791906118b5565b610419565b005b6101d860048036038101906101d39190611844565b6107d7565b6040516101e591906116d7565b60405180910390f35b6101f661083b565b6040516102039190611914565b60405180910390f35b610214610841565b60405161022191906117f0565b60405180910390f35b610244600480360381019061023f91906118b5565b610847565b005b61024e610d98565b60405161025b919061194d565b60405180910390f35b61027e60048036038101906102799190611966565b610dbd565b005b61029a60048036038101906102959190611844565b61106f565b005b6102a4611090565b6040516102b191906117f0565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061032c575061032b82611096565b5b9050919050565b60975f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60655f8381526020019081526020015f20600101549050919050565b61037e82610358565b610387816110ff565b6103918383611113565b505050565b61039e6111ee565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461040b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040290611a36565b60405180910390fd5b61041582826111f5565b5050565b61042d678dc8a06a0dfab30460c01b6112d0565b610441673bed1bc18414a01060c01b6112d0565b610455675dfab471e6184b9960c01b6112d0565b610469676c73d2f24ec5463260c01b6112d0565b6001609a54146104d657610487678410b9b6b4317f0260c01b6112d0565b61049b67fdb3214702951e2a60c01b6112d0565b6040517fa1875fdb0000000000000000000000000000000000000000000000000000000081526004016104cd90611a9e565b60405180910390fd5b6104ea6741635195b41c437b60c01b6112d0565b6104fe67ac7d21ca33535c6e60c01b6112d0565b610512676341a078ab4c37e160c01b6112d0565b6105266713b896fe696bce0c60c01b6112d0565b61053a673ceebaab734dec1d60c01b6112d0565b61054e67675f934db90ad17760c01b6112d0565b5f83116105b85761056967605a55e651fd7ec160c01b6112d0565b61057d67d3bdc0f66b3cab4560c01b6112d0565b6040517f3b3e63500000000000000000000000000000000000000000000000000000000081526004016105af90611b06565b60405180910390fd5b6105cc671ceb116c773b277e60c01b6112d0565b6105e0671de3930f05af695460c01b6112d0565b6105f467346bde74193b589960c01b6112d0565b60975f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631da9e1f18484846040518463ffffffff1660e01b815260040161065293929190611b33565b60408051808303815f875af115801561066d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106919190611b7c565b50506106a767045a33864c5f53a460c01b6112d0565b6106bb6760cef4c239fad63a60c01b6112d0565b60995f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161071993929190611bba565b6020604051808303815f875af1158015610735573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107599190611c19565b5061076e6747ff131b1143330860c01b6112d0565b61078267124be38f9975c79660c01b6112d0565b8173ffffffffffffffffffffffffffffffffffffffff167fcfd46ac20a36aaa3a7ceb984d52851e761bce036f079c764573a95e47ac6e4e082856040516107ca929190611c44565b60405180910390a2505050565b5f60655f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b609a5481565b5f801b81565b61085b677961f3499c173c8060c01b6112d0565b61086f673bed1bc18414a01060c01b6112d0565b610883675dfab471e6184b9960c01b6112d0565b610897676c73d2f24ec5463260c01b6112d0565b6001609a5414610904576108b5678410b9b6b4317f0260c01b6112d0565b6108c967fdb3214702951e2a60c01b6112d0565b6040517fa1875fdb0000000000000000000000000000000000000000000000000000000081526004016108fb90611a9e565b60405180910390fd5b6109186741635195b41c437b60c01b6112d0565b61092c67ac7d21ca33535c6e60c01b6112d0565b61094067535f9cb2aace0dbf60c01b6112d0565b61095467e7b7b3875dc67d0c60c01b6112d0565b61096867140e5155e1f0af7760c01b6112d0565b61097c67d70a28018dbed70460c01b6112d0565b5f83116109e65761099767f04e562947480c0960c01b6112d0565b6109ab67903be651deb237bb60c01b6112d0565b6040517f3b3e63500000000000000000000000000000000000000000000000000000000081526004016109dd90611b06565b60405180910390fd5b6109fa673ad32ab763daf8b460c01b6112d0565b610a0e67125a21555dc9a9f660c01b6112d0565b610a2267d79dfe0ab268653a60c01b6112d0565b5f60975f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166319975090836040518263ffffffff1660e01b8152600401610a7d9190611914565b602060405180830381865afa158015610a98573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610abc9190611c7f565b9050610ad26749a84ec4f76db43060c01b6112d0565b610ae667711927a2aee2460460c01b6112d0565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b7c57610b2d673a2feb1f0c0d963160c01b6112d0565b610b4167e1331723e39ed0fc60c01b6112d0565b6040517ff7251ccf000000000000000000000000000000000000000000000000000000008152600401610b7390611cf4565b60405180910390fd5b610b9067c66e7748a743d7b360c01b6112d0565b610ba467fe3c12c0032895f460c01b6112d0565b610bb867b2391cc9a628cfdc60c01b6112d0565b60975f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb66b26c83866040518363ffffffff1660e01b8152600401610c14929190611c44565b6020604051808303815f875af1158015610c30573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c549190611c19565b50610c6967b9b904548ba4661160c01b6112d0565b610c7d6750cbea1f167fdb1760c01b6112d0565b60995f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b8152600401610cd9929190611d12565b6020604051808303815f875af1158015610cf5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d199190611c19565b50610d2e679c3a56132bd169fb60c01b6112d0565b610d4267f29eea9ea5034f5d60c01b6112d0565b8273ffffffffffffffffffffffffffffffffffffffff167f4f1f846ff23d88c6f50589e048ab790d93030ce21f1529c02e1cd34ebf6a8fce8386604051610d8a929190611c44565b60405180910390a250505050565b60995f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610dd1672b2f0f76543cfe5b60c01b6112d0565b5f8060019054906101000a900460ff16159050808015610e00575060015f8054906101000a900460ff1660ff16105b80610e2c5750610e0f306112d3565b158015610e2b575060015f8054906101000a900460ff1660ff16145b5b610e6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6290611da9565b60405180910390fd5b60015f806101000a81548160ff021916908360ff1602179055508015610ea65760015f60016101000a81548160ff0219169083151502179055505b610eba678909634617ed61ed60c01b6112d0565b610ece6778d19533c4573cb160c01b6112d0565b610ee2677d39d7c78a62eff660c01b6112d0565b610ef667478cc0c4d2ca0bb460c01b6112d0565b610efe6112f5565b610f1267f7b83679fb48b6ce60c01b6112d0565b610f26675b6707541bc6f7c360c01b6112d0565b610f325f801b33611345565b610f4667fa25f372efde3f5d60c01b6112d0565b8360975f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f9a6734a5d3e8f709ce2c60c01b6112d0565b82609881905550610fb56762780cdbd7c3d7cb60c01b6112d0565b8160995f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611009674f7f887a28c2648b60c01b6112d0565b6001609a819055508015611069575f8060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516110609190611e0c565b60405180910390a15b50505050565b61107882610358565b611081816110ff565b61108b83836111f5565b505050565b60985481565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6111108161110b6111ee565b611353565b50565b61111d82826107d7565b6111ea57600160655f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061118f6111ee565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b5f33905090565b6111ff82826107d7565b156112cc575f60655f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506112716111ee565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b50565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f60019054906101000a900460ff16611343576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133a90611e95565b60405180910390fd5b565b61134f8282611113565b5050565b61135d82826107d7565b6113d35761136a816113d7565b611377835f1c6020611404565b604051602001611388929190611fb3565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ca9190612034565b60405180910390fd5b5050565b60606113fd8273ffffffffffffffffffffffffffffffffffffffff16601460ff16611404565b9050919050565b60605f60028360026114169190612081565b61142091906120c2565b67ffffffffffffffff811115611439576114386120f5565b5b6040519080825280601f01601f19166020018201604052801561146b5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f815181106114a2576114a1612122565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061150557611504612122565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f60018460026115439190612081565b61154d91906120c2565b90505b60018111156115ec577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061158f5761158e612122565b5b1a60f81b8282815181106115a6576115a5612122565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600485901c9450806115e59061214f565b9050611550565b505f841461162f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611626906121c0565b60405180910390fd5b8091505092915050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116718161163d565b811461167b575f80fd5b50565b5f8135905061168c81611668565b92915050565b5f602082840312156116a7576116a6611639565b5b5f6116b48482850161167e565b91505092915050565b5f8115159050919050565b6116d1816116bd565b82525050565b5f6020820190506116ea5f8301846116c8565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61173261172d611728846116f0565b61170f565b6116f0565b9050919050565b5f61174382611718565b9050919050565b5f61175482611739565b9050919050565b6117648161174a565b82525050565b5f60208201905061177d5f83018461175b565b92915050565b5f819050919050565b61179581611783565b811461179f575f80fd5b50565b5f813590506117b08161178c565b92915050565b5f602082840312156117cb576117ca611639565b5b5f6117d8848285016117a2565b91505092915050565b6117ea81611783565b82525050565b5f6020820190506118035f8301846117e1565b92915050565b5f611813826116f0565b9050919050565b61182381611809565b811461182d575f80fd5b50565b5f8135905061183e8161181a565b92915050565b5f806040838503121561185a57611859611639565b5b5f611867858286016117a2565b925050602061187885828601611830565b9150509250929050565b5f819050919050565b61189481611882565b811461189e575f80fd5b50565b5f813590506118af8161188b565b92915050565b5f805f606084860312156118cc576118cb611639565b5b5f6118d9868287016118a1565b93505060206118ea86828701611830565b92505060406118fb868287016118a1565b9150509250925092565b61190e81611882565b82525050565b5f6020820190506119275f830184611905565b92915050565b5f61193782611739565b9050919050565b6119478161192d565b82525050565b5f6020820190506119605f83018461193e565b92915050565b5f805f6060848603121561197d5761197c611639565b5b5f61198a86828701611830565b935050602061199b868287016117a2565b92505060406119ac86828701611830565b9150509250925092565b5f82825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e63655f8201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b5f611a20602f836119b6565b9150611a2b826119c6565b604082019050919050565b5f6020820190508181035f830152611a4d81611a14565b9050919050565b7f416461707465722f6e6f742d6c697665000000000000000000000000000000005f82015250565b5f611a886010836119b6565b9150611a9382611a54565b602082019050919050565b5f6020820190508181035f830152611ab581611a7c565b9050919050565b7f416461707465722f616d6f756e742d69732d7a65726f000000000000000000005f82015250565b5f611af06016836119b6565b9150611afb82611abc565b602082019050919050565b5f6020820190508181035f830152611b1d81611ae4565b9050919050565b611b2d81611809565b82525050565b5f606082019050611b465f830186611905565b611b536020830185611b24565b611b606040830184611905565b949350505050565b5f81519050611b768161188b565b92915050565b5f8060408385031215611b9257611b91611639565b5b5f611b9f85828601611b68565b9250506020611bb085828601611b68565b9150509250929050565b5f606082019050611bcd5f830186611b24565b611bda6020830185611b24565b611be76040830184611905565b949350505050565b611bf8816116bd565b8114611c02575f80fd5b50565b5f81519050611c1381611bef565b92915050565b5f60208284031215611c2e57611c2d611639565b5b5f611c3b84828501611c05565b91505092915050565b5f604082019050611c575f830185611905565b611c646020830184611905565b9392505050565b5f81519050611c798161181a565b92915050565b5f60208284031215611c9457611c93611639565b5b5f611ca184828501611c6b565b91505092915050565b7f416461707465722f6f776e65722d6e6f742d6d617463680000000000000000005f82015250565b5f611cde6017836119b6565b9150611ce982611caa565b602082019050919050565b5f6020820190508181035f830152611d0b81611cd2565b9050919050565b5f604082019050611d255f830185611b24565b611d326020830184611905565b9392505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c7265615f8201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b5f611d93602e836119b6565b9150611d9e82611d39565b604082019050919050565b5f6020820190508181035f830152611dc081611d87565b9050919050565b5f819050919050565b5f60ff82169050919050565b5f611df6611df1611dec84611dc7565b61170f565b611dd0565b9050919050565b611e0681611ddc565b82525050565b5f602082019050611e1f5f830184611dfd565b92915050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420695f8201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b5f611e7f602b836119b6565b9150611e8a82611e25565b604082019050919050565b5f6020820190508181035f830152611eac81611e73565b9050919050565b5f81905092915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000005f82015250565b5f611ef1601783611eb3565b9150611efc82611ebd565b601782019050919050565b5f81519050919050565b5f5b83811015611f2e578082015181840152602081019050611f13565b5f8484015250505050565b5f611f4382611f07565b611f4d8185611eb3565b9350611f5d818560208601611f11565b80840191505092915050565b7f206973206d697373696e6720726f6c65200000000000000000000000000000005f82015250565b5f611f9d601183611eb3565b9150611fa882611f69565b601182019050919050565b5f611fbd82611ee5565b9150611fc98285611f39565b9150611fd482611f91565b9150611fe08284611f39565b91508190509392505050565b5f601f19601f8301169050919050565b5f61200682611f07565b61201081856119b6565b9350612020818560208601611f11565b61202981611fec565b840191505092915050565b5f6020820190508181035f83015261204c8184611ffc565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61208b82611882565b915061209683611882565b92508282026120a481611882565b915082820484148315176120bb576120ba612054565b5b5092915050565b5f6120cc82611882565b91506120d783611882565b92508282019050808211156120ef576120ee612054565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61215982611882565b91505f820361216b5761216a612054565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e745f82015250565b5f6121aa6020836119b6565b91506121b582612176565b602082019050919050565b5f6020820190508181035f8301526121d78161219e565b905091905056fea2646970667358221220f285693b8a74470eedcb1a4cf8882752aea92b564211f11c862d6d7f8c5d62be64736f6c63430008150033";

type CollateralAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollateralAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CollateralAdapter__factory extends ContractFactory {
  constructor(...args: CollateralAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CollateralAdapter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CollateralAdapter__factory {
    return super.connect(runner) as CollateralAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollateralAdapterInterface {
    return new Interface(_abi) as CollateralAdapterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CollateralAdapter {
    return new Contract(address, _abi, runner) as unknown as CollateralAdapter;
  }
}
