{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x1D0532f020942F84B0eAFE00a960127d6534AA1D",
    "txHash": "0x29113cde41e600710c782fcc8f1f9b5a5775751ff91187a1596d08e13eca5645"
  },
  "proxies": [
    {
      "address": "0x6523f0b20bA9741d0f717d93303a1464223CFc83",
      "txHash": "0xda7f81972c82b79215d0d82cf682f6d6f4fbfeeb65c88ad59f9fea473068ea18",
      "kind": "transparent"
    },
    {
      "address": "0xDed2D6eB339E0f10196c02f0066E24B45d29309F",
      "txHash": "0x436eeabc3ef601a2e07aa7391a2856b9ec8c83d6ad66063ad82ba0e5de0a795c",
      "kind": "transparent"
    },
    {
      "address": "0x69a866778EE3a071BFefca6AACba0829578C6A80",
      "txHash": "0x3c821e8b318b145de43ef141aa1bfcdfd057925334c7210371f593afd648bdd7",
      "kind": "transparent"
    },
    {
      "address": "0x54848f5b2F6Fb7E45c4Fe9B3cd25DE868619AaFa",
      "txHash": "0x6b6a4413e6a44051f4f84c1cf9b85da704247a014d473cddddb7fc781fad168a",
      "kind": "transparent"
    },
    {
      "address": "0xC73a8C644796b96c401F20D9E26Abdaa08D025E2",
      "txHash": "0x078144be0c6f7f038b374d4cf772d657f02cc3f977ab1060411ee5f6f68d244a",
      "kind": "transparent"
    },
    {
      "address": "0xF5dB885417bE3448B5518F1C177518aEB508bE6b",
      "txHash": "0x06ae0d4cdaf90d8ee8ac0ef19d1c4c966b1291b13c53bd6f23fb171f6a0d8469",
      "kind": "transparent"
    },
    {
      "address": "0xA0223443263867A23fBD886519D792F35f17e3d9",
      "txHash": "0xa5872850abdb7a84c8981f40d9cadfa8a70b03a5024085a305f2d3f2aee5ca29",
      "kind": "transparent"
    },
    {
      "address": "0x425b9268Fb158d9b33FcF90d7F13Ec35eb0C2387",
      "txHash": "0x416c74630a437fbb87b31ae6d7a8a26afae10513da4148b59c470babfcc65afe",
      "kind": "transparent"
    },
    {
      "address": "0x5887648f254D579431f9e5185e412D7263507aa1",
      "txHash": "0x6c7ff739cd48f98dfc82d706784b6d2ac4863a945ebfd903d3f5577383e01421",
      "kind": "transparent"
    },
    {
      "address": "0x883Be52726Eb3d48C1C8Da49A0230eD604f3Fc9F",
      "txHash": "0x9225c68acd753e7167b115a7d62c18a0025ef2e2a1073a4322b0ef94ec168272",
      "kind": "transparent"
    },
    {
      "address": "0xF8017EA6c4Eb4FE368417b1F97695fe07FC1B116",
      "txHash": "0x6a9bcdd88112b45926e4fad8e404656894bac537d1d71f8e0f67d9b571c4ff2e",
      "kind": "transparent"
    },
    {
      "address": "0xC680406fBfF12A73Dc7FDf5ADDfA3a6D313b10F9",
      "txHash": "0x98aaf964cae4e04b9a5e043cda42254c4e9a391ffdf33ee697ff3a8f75daad9b",
      "kind": "transparent"
    },
    {
      "address": "0xF182ADB8480777A14Ae08B6B83e1ED2DbBb1D289",
      "txHash": "0x1989890e97e359e207c695c5ca064ea9dcf4a95ccb20dfb4dcc397f783836c4c",
      "kind": "transparent"
    },
    {
      "address": "0xc5Ff8185201B3C25E6AEAEEDeb43c036ae802Af9",
      "txHash": "0x530f389e1509afa67966a37787a11dc37ef23204aed738e29c749ec32a98d289",
      "kind": "transparent"
    },
    {
      "address": "0xb3930CDb76f459DAC2BD515bdC87279d2EC74B28",
      "txHash": "0x1f8cbdce5f5aaf1ddf3dd16be027b433a9118c1b043a90f534fd7a20c0ef052e",
      "kind": "transparent"
    },
    {
      "address": "0x2323972765E2d6394212CeF08c6539c04aF76490",
      "txHash": "0x564b04ff8b965cf682b25e477252cb3b368f528d652fd6a8d9e8f132e7ce198f",
      "kind": "transparent"
    },
    {
      "address": "0xdEcf459236F09F1A3BD6992b07C72bD6e68Fd4dB",
      "txHash": "0xb32d205f09433918ae7998711e868b773490e282b087cdd4f5a6d06f78a77ca4",
      "kind": "transparent"
    },
    {
      "address": "0xA0F1F9c157d28D8Eb94deDe433d097FbaA51A180",
      "txHash": "0x8de973c48b0276c67e8c8e62d5e0b21aee5c0692b309fbbb188269eee2528029",
      "kind": "transparent"
    },
    {
      "address": "0x9A1F74e1639eD9a5A65738330968Aee11AA23E3E",
      "txHash": "0x72859403ce78361402bfcef8cbfdd208f1397743c49762c18700c3825446c726",
      "kind": "transparent"
    },
    {
      "address": "0x7f460fC77765e69c6c3B8880B52309cb17c7Ef4F",
      "txHash": "0x7543244ce8ddf21b60ccafb37aefff7b710d15f62d972f0fc36996c97fab7dbb",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ebfea5be5b6480628cd76a12bc45b24e99f06e89e614b9ad87c83d63a52fcb4e": {
      "address": "0x5B34d2FD760EfEd9e65A4d0785D7bbBBD1194656",
      "txHash": "0xb9fbf9c40c0c778d6062ed65c352d105709f442d67393129337e3075e3350049",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "debt",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "CoreVault",
            "src": "contracts/vault.sol:13"
          },
          {
            "label": "live",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "CoreVault",
            "src": "contracts/vault.sol:14"
          },
          {
            "label": "vaultId",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "CoreVault",
            "src": "contracts/vault.sol:15"
          },
          {
            "label": "vault",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_struct(Vault)8377_storage)dyn_storage",
            "contract": "CoreVault",
            "src": "contracts/vault.sol:17"
          },
          {
            "label": "collateralMapping",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_bytes32,t_struct(Collateral)8365_storage)",
            "contract": "CoreVault",
            "src": "contracts/vault.sol:18"
          },
          {
            "label": "vaultMapping",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_struct(Vault)8377_storage)",
            "contract": "CoreVault",
            "src": "contracts/vault.sol:19"
          },
          {
            "label": "ownerMapping",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CoreVault",
            "src": "contracts/vault.sol:20"
          },
          {
            "label": "firstVault",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CoreVault",
            "src": "contracts/vault.sol:21"
          },
          {
            "label": "lastVault",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CoreVault",
            "src": "contracts/vault.sol:22"
          },
          {
            "label": "list",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_uint256,t_struct(List)8382_storage)",
            "contract": "CoreVault",
            "src": "contracts/vault.sol:23"
          },
          {
            "label": "vaultCountMapping",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CoreVault",
            "src": "contracts/vault.sol:24"
          },
          {
            "label": "availableNGNx",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CoreVault",
            "src": "contracts/vault.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Vault)8377_storage)dyn_storage": {
            "label": "struct IVaultSchema.Vault[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(VaultStateEnum)8386": {
            "label": "enum IVaultSchema.VaultStateEnum",
            "members": [
              "Idle",
              "Active",
              "Inactive"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Collateral)8365_storage)": {
            "label": "mapping(bytes32 => struct IVaultSchema.Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(List)8382_storage)": {
            "label": "mapping(uint256 => struct IVaultSchema.List)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Vault)8377_storage)": {
            "label": "mapping(uint256 => struct IVaultSchema.Vault)",
            "numberOfBytes": "32"
          },
          "t_struct(Collateral)8365_storage": {
            "label": "struct IVaultSchema.Collateral",
            "members": [
              {
                "label": "TotalNormalisedDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "TotalCollateralValue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "debtCeiling",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "debtFloor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "badDebtGracePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(List)8382_storage": {
            "label": "struct IVaultSchema.List",
            "members": [
              {
                "label": "prev",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "next",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Vault)8377_storage": {
            "label": "struct IVaultSchema.Vault",
            "members": [
              {
                "label": "lockedCollateral",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unlockedCollateral",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "normalisedDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "collateralName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "vaultState",
                "type": "t_enum(VaultStateEnum)8386",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fba1191ab71711cbce2b1ce263ace2a8b5aac7e7ddcc51585f10d5762d297b0f": {
      "address": "0x1195c677e5aEf72DAa289eD5295c5B7f1d59Bc02",
      "txHash": "0xc60561a0be36f75a07cec2b45a30d8b8b4e98f672ad3de63df6318b11206f070",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_struct(Counter)1922_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "254",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/helpers/ERC2771ContextUpgradeable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/helpers/ERC2771ContextUpgradeable.sol:70"
          },
          {
            "label": "live",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "NGNX",
            "src": "contracts/ngnx.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)1922_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1922_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eca0ca4aa213e7df5a4c9500ac52cf89329e7724ad311d0dd183ebccba131e24": {
      "address": "0x06d81080F26A9C76caaF3f30E6a763eB8F9cC9a2",
      "txHash": "0x4393a8e6759ffa0f0f592bd8ef8e4a6e0412bb22cc3ad54cb54ef2b54ca1d8b3",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "vaultContract",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IVault)8035",
            "contract": "CollateralAdapter",
            "src": "contracts/adapter.sol:13"
          },
          {
            "label": "collateralType",
            "offset": 0,
            "slot": "152",
            "type": "t_bytes32",
            "contract": "CollateralAdapter",
            "src": "contracts/adapter.sol:14"
          },
          {
            "label": "collateralContract",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IERC20)4586",
            "contract": "CollateralAdapter",
            "src": "contracts/adapter.sol:15"
          },
          {
            "label": "live",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "CollateralAdapter",
            "src": "contracts/adapter.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4586": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IVault)8035": {
            "label": "contract IVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "956d31ce20baeaa92f7348e8a09be3f512aeac5ec1d755b7e85b03d9633b4f24": {
      "address": "0x24aF54447BA51962538C695deBE32f1e7924Cdc1",
      "txHash": "0xdb8c27ece78b427f583e8310976966fdb7969b8c7d5d7ae2a3c6f742ee4a64af",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "vaultContract",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IVault)8035",
            "contract": "NGNXAdapter",
            "src": "contracts/adapter.sol:88"
          },
          {
            "label": "ngnx",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(INGNX)7919",
            "contract": "NGNXAdapter",
            "src": "contracts/adapter.sol:89"
          },
          {
            "label": "live",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "NGNXAdapter",
            "src": "contracts/adapter.sol:90"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(INGNX)7919": {
            "label": "contract INGNX",
            "numberOfBytes": "20"
          },
          "t_contract(IVault)8035": {
            "label": "contract IVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
